FROM --platform=linux/386 stagex/bootstrap-stage2 AS build
ARG TARGETARCH
ENV BUILD=i386-unknown-linux-musl

RUN find / -iname crtendS.o

#ARG MUSL_VERSION
#ADD fetch/musl-${MUSL_VERSION}.tar.gz /
#WORKDIR /musl-${MUSL_VERSION}
#RUN --network=none <<-EOF
#	set -eux
#	./configure \
#		--prefix=/usr \
#		--build=${BUILD} \
#		--host=${TARGET} \
#		--disable-wrapper
#	make
#	make DESTDIR=/rootfs install
#EOF

ARG LINUX_VERSION
ADD fetch/linux-${LINUX_VERSION}.tar.xz /
WORKDIR /linux-${LINUX_VERSION}
RUN --network=none <<-EOF
	set -eux
	make LLVM=1 ARCH="$ARCH" headers
	find usr/include -name '.*' -delete
	rm usr/include/Makefile
	rm usr/include/headers_check.pl
	cp -rv usr/include /rootfs/usr/
EOF

ARG BUSYBOX_VERSION
ADD fetch/busybox-${BUSYBOX_VERSION}.tar.bz2 /
WORKDIR /busybox-${BUSYBOX_VERSION}
RUN --network=none <<-EOF
	set -eux
	. /.env
	sed -i Makefile -e 's/gcc/clang/g' -e 's/g++/clang/g'
	setConfs='
		CONFIG_LAST_SUPPORTED_WCHAR=0
		CONFIG_STATIC=y
	'
	unsetConfs='
		CONFIG_FEATURE_SYNC_FANCY
		CONFIG_FEATURE_HAVE_RPC
		CONFIG_FEATURE_INETD_RPC
		CONFIG_FEATURE_UTMP
		CONFIG_FEATURE_WTMP
	'
	make \
		CROSS_COMPILE=${TARGET}- \
		defconfig
	for conf in $unsetConfs; do
		sed -i \
			-e "s!^$conf=.*\$!# $conf is not set!" \
			.config
  done
  for confV in $setConfs; do
		conf="${confV%=*}"
  	sed -i \
			-e "s!^$conf=.*\$!$confV!" \
			-e "s!^# $conf is not set\$!$confV!" \
			.config
  	if ! grep -q "^$confV\$" .config; then
  	  echo "$confV" >> .config
  	fi
  done
  make oldconfig CROSS_COMPILE=${TARGET}-
  for conf in $unsetConfs; do
		! grep -q "^$conf=" .config
	done
	for confV in $setConfs; do
		grep -q "^$confV\$" .config
  done
  make CROSS_COMPILE=${TARGET}-
EOF

WORKDIR ${HOME}/go
RUN --network=none <<-EOF
	set -eux
	cd src
	GOROOT_BOOTSTRAP=/usr/lib/go \
	GOHOSTARCH=386 GOARCH=${TARGETARCH} \
	bash -- make.bash
EOF
RUN --network=none <<-EOF
	set -eux
	rm -rf src/testdata
	mkdir -p /rootfs/usr/lib/go
	cp bin/linux_${TARGETARCH}/* bin
	rm -rf bin/linux_${TARGETARCH}
	cp -a bin lib pkg src /rootfs/usr/lib/go
	mkdir -p /rootfs/usr/bin
	ln -s /usr/lib/go/bin/go /rootfs/usr/bin/go
	ln -s /usr/lib/go/bin/gofmt /rootfs/usr/bin/gofmt
EOF
RUN --network=none <<-EOF
	set -eux
	. /.env
	env -C /build-busybox make \
		CROSS_COMPILE=${TARGET}- \
		CONFIG_PREFIX=/rootfs \
		install
	env -C /build-musl make DESTDIR=/rootfs install
	env -C /build-binutils make DESTDIR=/rootfs install
	env -C /build-make make DESTDIR=/rootfs install
	env -C /build-gcc make DESTDIR=/rootfs install
	cp -Rv /build-linux/* /rootfs/usr/include/
	cd /rootfs/
	ln -sT /lib lib64
	mkdir -p etc tmp var/tmp
EOF

FROM scratch AS package
COPY --from=build /rootfs/ /
