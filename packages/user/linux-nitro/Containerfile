FROM scratch AS base
ENV VERSION=5.19.6
ENV SRC_HASH=41a4f824af614460c429a7c723e8dcbb0e042f0047d328c18b4ed6f2b4efa63a
ENV SRC_FILE=linux-${VERSION}.tar.xz
ENV SRC_SITE=http://mirrors.edge.kernel.org/pub/linux/kernel/v5.x/${SRC_FILE}
ENV NSM_VERSION=ed24913346a34d719afa2031299253160a2e3460
ENV NSM_SRC_HASH=720916a640f7579a1e9a972ddd43448d201b9ce4d4750079d8256e83be3e937c
ENV NSM_SRC_FILE=nsm.tgz
ENV NSM_SRC_SITE=https://codeload.github.com/aws/aws-nitro-enclaves-sdk-bootstrap/legacy.tar.gz/${NSM_VERSION}

FROM base AS fetch
ADD --checksum=sha256:${SRC_HASH} ${SRC_SITE} .
ADD --checksum=sha256:${NSM_SRC_HASH} ${NSM_SRC_SITE} ${NSM_SRC_FILE}

FROM fetch AS build
COPY --from=stagex/core-musl . /
COPY --from=stagex/core-make . /
COPY --from=stagex/core-binutils . /
COPY --from=stagex/core-linux-headers . /
COPY --from=stagex/core-openssl . /
COPY --from=stagex/core-perl . /
COPY --from=stagex/core-m4 . /
COPY --from=stagex/core-gcc . /
COPY --from=stagex/core-bison . /
COPY --from=stagex/core-libzstd . /
COPY --from=stagex/core-zlib . /
COPY --from=stagex/core-flex . /
COPY --from=stagex/core-pkgconf . /
COPY --from=stagex/core-coreutils . /
COPY --from=stagex/core-findutils . /
COPY --from=stagex/core-diffutils . /
COPY --from=stagex/core-tar . /
COPY --from=stagex/core-gzip . /
COPY --from=stagex/core-xz . /
COPY --from=stagex/core-sed . /
COPY --from=stagex/core-grep . /
COPY --from=stagex/core-gawk . /
COPY --from=stagex/core-bc . /
COPY --from=stagex/core-bash . /
COPY --from=stagex/core-bash /bin/bash /bin/sh
COPY --from=stagex/user-elfutils . /
RUN mkdir nitro-bootstrap
RUN tar -xf ${NSM_SRC_FILE} -C nitro-bootstrap --strip-components 1
RUN tar -xf ${SRC_FILE}
WORKDIR /linux-${VERSION}
ADD linux.config .config
ENV SOURCE_DATE_EPOCH=1
ENV KBUILD_BUILD_HOST=stagex
ENV KBUILD_BUILD_USER=user
ENV KBUILD_BUILD_TIMESTAMP="Thu Jan  1 12:00:00 AM GMT 1970"
RUN <<-EOF
	set -eux
	make olddefconfig
	make -j "$(nproc)" bzImage
	make -j "$(nproc)" modules_prepare
	cd ../nitro-bootstrap
	make -C ../linux-${VERSION} M=../nitro-bootstrap/nsm-driver
EOF

FROM build AS install
RUN <<-EOF
	set -eux
	mkdir /rootfs
	cp .config /rootfs/linux.config
	cp arch/x86_64/boot/bzImage /rootfs
	cp /nitro-bootstrap/nsm-driver/nsm.ko /rootfs
EOF

FROM stagex/core-filesystem AS package
COPY --from=install /rootfs/. /
