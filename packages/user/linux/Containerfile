FROM scratch AS base
ARG VERSION
COPY --from=stagex/core-musl . /
COPY --from=stagex/core-make . /
COPY --from=stagex/core-binutils . /
COPY --from=stagex/core-linux-headers . /
COPY --from=stagex/core-openssl . /
COPY --from=stagex/core-perl . /
COPY --from=stagex/core-m4 . /
COPY --from=stagex/core-gcc . /
COPY --from=stagex/core-bison . /
COPY --from=stagex/core-libzstd . /
COPY --from=stagex/core-zlib . /
COPY --from=stagex/core-flex . /
COPY --from=stagex/core-pkgconf . /
COPY --from=stagex/core-coreutils . /
COPY --from=stagex/core-findutils . /
COPY --from=stagex/core-diffutils . /
COPY --from=stagex/core-tar . /
COPY --from=stagex/core-gzip . /
COPY --from=stagex/core-xz . /
COPY --from=stagex/core-sed . /
COPY --from=stagex/core-grep . /
COPY --from=stagex/core-gawk . /
COPY --from=stagex/core-bc . /
COPY --from=stagex/core-bash . /
COPY --from=stagex/core-bash /bin/bash /bin/sh
COPY --from=stagex/user-elfutils . /
COPY --from=fetch . .
RUN tar -xf linux-${VERSION}.tar.xz
ENV SOURCE_DATE_EPOCH=1
ENV KBUILD_BUILD_HOST=stagex
ENV KBUILD_BUILD_USER=user
ENV KBUILD_BUILD_TIMESTAMP="Thu Jan  1 12:00:00 AM GMT 1970"
COPY --chmod=775 <<-EOF /usr/bin/build-static
	#!/bin/bash
	set -eux
	make -j "$(nproc)" bzImage
  mkdir /rootfs
	cp .config /rootfs/linux.config
	cp "arch/$(uname -m)/boot/bzImage" /rootfs
EOF
COPY --chmod=775 <<-EOF /usr/bin/build-dynamic
	#!/bin/bash
	set -eux
	ARCH="$(uname -m)"
	make defconfig
	make -j "$(nproc)" bzImage
	make -j "$(nproc)" modules INSTALL_MOD_PATH=/rootfs
	mkdir -p /rootfs/usr/lib/modules
	make INSTALL_MOD_PATH=/rootfs/usr modules_install
	cp .config /rootfs/linux.config
	cp "arch/$(uname -m)/boot/bzImage" /rootfs
EOF
WORKDIR /linux-${VERSION}

FROM base as build-linux-generic
RUN build-dynamic

FROM base as build-linux-airgap
ADD airgap.config .config
RUN build-static

FROM base as build-linux-server
ADD server.config .config
RUN build-static

FROM base as build-linux-guest
ADD guest.config .config
RUN build-static

FROM base as build-linux-nitro
ADD nitro.config .config
RUN build-static

FROM base as build-gen_initramfs
RUN --network=none <<-EOF
	set -eux
	gcc usr/gen_init_cpio.c -o usr/gen_init_cpio
	mkdir -p /rootfs/usr/bin
	cat usr/gen_initramfs.sh \
		| sed 's:usr/gen_init_cpio:gen_init_cpio:g' \
		> /rootfs/usr/bin/gen_initramfs
	chmod +x /rootfs/usr/bin/gen_initramfs
	cp -a usr/gen_init_cpio /rootfs/usr/bin
EOF

FROM stagex/core-filesystem AS package-linux-generic
COPY --from=build-linux-generic /rootfs/ /

FROM stagex/core-filesystem AS package-linux-airgap
COPY --from=build-linux-airgap /rootfs/ /

FROM stagex/core-filesystem AS package-linux-server
COPY --from=build-linux-server /rootfs/ /

FROM stagex/core-filesystem AS package-linux-guest
COPY --from=build-linux-guest /rootfs/ /

FROM stagex/core-filesystem AS package-linux-nitro
COPY --from=build-linux-nitro /rootfs/ /

FROM stagex/core-filesystem AS package-gen_initramfs
COPY --from=build-gen_initramfs /rootfs/ /
